
#!/usr/bin/python
# -*- coding: utf-8 -*-

# Warning: This script has to be executed with sudo.

# Pacheco Franco Jesús Enrique

import argparse
from scapy.all import * # scapy version 2 +

def arg_parse():

	parser = argparse.ArgumentParser(description="Artisan Port Scanner",
										epilog="Developed by Jesús Enrique Pacheco Franco [Svare]")

	parser.add_argument('-i', '--host', default = None, type=str, required=True, help='Host to scan.', dest='host'),
	parser.add_argument('-p', '--port', default = '1-1000', type=str, required=False,
							help='''Port/s to scan, yo can specify a single port, multiple ports separated by \',\' or
									a range with \'-\', default is range 1-1000.''', dest='ports')

	return parser.parse_args()

if __name__ == '__main__':

	opts = arg_parse() # Parse command line args.

	# Parse ports.

	if '-' in opts.ports:
		ports = range(int(opts.ports.split('-')[0]), int(opts.ports.split('-')[1]) + 1)
	elif ',' in opts.ports:
		ports = list(map(lambda x: int(x), opts.ports.split(',')))
	else:
		ports = [int(opts.ports)]

	conf.verb = 0 # Turn off scapy's verbose mode.
	 
	print('\nScanning {0} ports...\n'.format(opts.host))
	
	for port in ports:

		source_port = RandShort() # Set a random source port.

		# Build a TCP package with a specific host and sync flag.
		package = IP(dst = opts.host)/TCP(sport = source_port, dport = port, flags = "S")

		response = sr1(package, timeout = 0.1) # Send package

		if(response is None):

			pass

		# If we recieve a TCP response with Sync/Ack flags, port is up
		elif(response.haslayer(TCP) and response.getlayer(TCP).flags == 0x12): 

			# Cut the connection sending a package with reset flag. 

			p = IP(dst = opts.host)/TCP(sport = source_port, dport = port, flags = "R")
			rst = sr(p, timeout = 1)

			# Try to get info about the service running on that port

			try:
				service = socket.getservbyport(port)
			except:
				service = "¿?"

			print("[OPEN]", port," ->",service)

	print()